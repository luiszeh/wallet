{"ast":null,"code":"var _jsxFileName = \"/home/luisffg/Projetos/sd-012-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addUser } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    }, this.loginValidation);\n  }\n\n  loginValidation() {\n    const {\n      email,\n      password\n    } = this.state; // referencia do regexValidation: https://regexr.com/3e48o\n\n    const regexValidation = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    const isValid = regexValidation.test(email);\n    const requiredLength = 6;\n\n    if (isValid && password.length >= requiredLength) {\n      this.setState({\n        isDisabled: false\n      });\n    } else {\n      this.setState({\n        isDisabled: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      isDisabled\n    } = this.state;\n    const {\n      addUserAction\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      \"data-testid\": \"email-input\",\n      placeholder: \"e-mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      \"data-testid\": \"password-input\",\n      placeholder: \"senha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/carteira\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: isDisabled,\n      onClick: () => addUserAction(email),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addUserAction: payload => dispatch(addUser(payload))\n});\n\nLogin.propTypes = {\n  addUserAction: PropTypes.func\n}.isRequired;\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-012-project-trybewallet/src/pages/Login.js"],"names":["React","Link","connect","PropTypes","addUser","Login","Component","constructor","state","email","password","isDisabled","handleChange","bind","target","name","value","setState","loginValidation","regexValidation","isValid","test","requiredLength","length","render","addUserAction","props","mapDispatchToProps","dispatch","payload","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addUser } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    }, this.loginValidation);\n  }\n\n  loginValidation() {\n    const { email, password } = this.state;\n    // referencia do regexValidation: https://regexr.com/3e48o\n    const regexValidation = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    const isValid = regexValidation.test(email);\n    const requiredLength = 6;\n\n    if (isValid && password.length >= requiredLength) {\n      this.setState({\n        isDisabled: false,\n      });\n    } else {\n      this.setState({\n        isDisabled: true,\n      });\n    }\n  }\n\n  render() {\n    const { email, password, isDisabled } = this.state;\n    const { addUserAction } = this.props;\n    return (\n      <section>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={ email }\n          onChange={ this.handleChange }\n          data-testid=\"email-input\"\n          placeholder=\"e-mail\"\n        />\n        <input\n          type=\"text\"\n          name=\"password\"\n          value={ password }\n          onChange={ this.handleChange }\n          data-testid=\"password-input\"\n          placeholder=\"senha\"\n        />\n        <Link to=\"/carteira\">\n          <button\n            type=\"button\"\n            disabled={ isDisabled }\n            onClick={ () => addUserAction(email) }\n          >\n            Entrar\n          </button>\n        </Link>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addUserAction: (payload) => dispatch(addUser(payload)),\n});\n\nLogin.propTypes = {\n  addUserAction: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}