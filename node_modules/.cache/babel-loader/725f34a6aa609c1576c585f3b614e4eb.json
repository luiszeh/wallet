{"ast":null,"code":"var _jsxFileName = \"/home/luisffg/Projetos/sd-012-project-trybewallet/src/components/Header.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sumExpenses = this.sumExpenses.bind(this);\n  }\n\n  sumExpenses() {\n    const {\n      expenses\n    } = this.props;\n\n    if (expenses.length !== 0) {\n      const totalCost = expenses.reduce((total, expense) => total + expense.value * expense.exchangeRates[expense.currency].ask, 0);\n      return totalCost.toFixed(2);\n    }\n  }\n\n  render() {\n    const totalCost = 0;\n    const {\n      email\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, email), /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Despesa Total\", this.sumExpenses()), /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"BRL\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses\n});\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  expenses: PropTypes.array\n}.isRequired;\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-012-project-trybewallet/src/components/Header.js"],"names":["React","connect","PropTypes","Header","Component","constructor","props","sumExpenses","bind","expenses","length","totalCost","reduce","total","expense","value","exchangeRates","currency","ask","toFixed","render","email","mapStateToProps","state","user","wallet","propTypes","string","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEE,MAAAA;AAAF,QAAe,KAAKH,KAA1B;;AAEA,QAAIG,QAAQ,CAACC,MAAT,KAAoB,CAAxB,EAA2B;AACzB,YAAMC,SAAS,GAAGF,QAAQ,CACvBG,MADe,CACR,CAACC,KAAD,EAAQC,OAAR,KACND,KAAK,GAAGC,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,aAAR,CAAsBF,OAAO,CAACG,QAA9B,EAAwCC,GAFlD,EAEwD,CAFxD,CAAlB;AAGA,aAAOP,SAAS,CAACQ,OAAV,CAAkB,CAAlB,CAAP;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMT,SAAS,GAAG,CAAlB;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAY,KAAKf,KAAvB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,qBAAY,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,KADH,CADF,eAIE;AAAK,qBAAY,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEI,KAAKd,WAAL,EAFJ,CAJF,eAQE;AAAK,qBAAY,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CADF;AAcD;;AAnCkC;;AAsCrC,MAAMe,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,KAAK,EAAEE,KAAK,CAACC,IAAN,CAAWH,KADgB;AAElCZ,EAAAA,QAAQ,EAAEc,KAAK,CAACE,MAAN,CAAahB;AAFW,CAAZ,CAAxB;;AAKAN,MAAM,CAACuB,SAAP,GAAmB;AACjBL,EAAAA,KAAK,EAAEnB,SAAS,CAACyB,MADA;AAEjBlB,EAAAA,QAAQ,EAAEP,SAAS,CAAC0B;AAFH,EAGjBC,UAHF;AAKA,eAAe5B,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sumExpenses = this.sumExpenses.bind(this);\n  }\n\n  sumExpenses() {\n    const { expenses } = this.props;\n\n    if (expenses.length !== 0) {\n      const totalCost = expenses\n        .reduce((total, expense) => (\n          total + expense.value * expense.exchangeRates[expense.currency].ask), 0);\n      return totalCost.toFixed(2);\n    }\n  }\n\n  render() {\n    const totalCost = 0;\n    const { email } = this.props;\n    return (\n      <header>\n        <div data-testid=\"email-field\">\n          {email}\n        </div>\n        <div data-testid=\"total-field\">\n          Despesa Total\n          { this.sumExpenses() }\n        </div>\n        <div data-testid=\"header-currency-field\">\n          BRL\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  expenses: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}