{"version":3,"sources":["actions/index.js","reducers/user.js","reducers/currency.js","reducers/wallet.js","reducers/index.js","store/index.js","components/Header.js","components/InputValue.js","components/InputDescription.js","components/InputCurrency.js","components/InputPayment.js","components/InputTag.js","components/ExpenseForm.js","pages/Wallet.js","pages/Login.js","App.js","index.js"],"names":["saveCurrencyFailed","payload","type","INITIAL_STATE","email","user","state","action","currency","error","expenses","wallet","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Header","props","sumExpenses","bind","this","length","reduce","total","expense","value","exchangeRates","ask","toFixed","data-testid","React","Component","connect","InputValue","valor","handleChange","htmlFor","id","name","onChange","InputDescription","description","InputCurrency","currencies","map","item","index","key","InputPayment","paymentMethod","InputTag","tag","ExpenseForm","getCurrencies","handleClick","fetch","response","json","results","filter","Object","keys","setState","target","checked","addExpenseAction","method","previus","onClick","to","dispatch","addExpenses","Wallet","Login","password","isDisabled","loginValidation","addUserAction","getCurrency","test","className","placeholder","disabled","variant","addUser","a","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"wUASaA,EAAqB,SAACC,GAAD,MAAc,CAAEC,KANd,uBAM0CD,YCPxEE,EAAgB,CACpBC,MAAO,IAYMC,MATf,WAA8C,IAAhCC,EAA+B,uDAAvBH,EAAeI,EAAQ,uCAC3C,OAAQA,EAAOL,MACf,IDRsB,WCSpB,MAAO,CAAEE,MAAOG,EAAON,SACzB,QACE,OAAOK,I,QCTLH,EAAgB,CACpBK,SAAU,IAcGA,MAXf,WAAkD,IAAhCF,EAA+B,uDAAvBH,EAAeI,EAAQ,uCAC/C,OAAQA,EAAOL,MACf,IFNkC,uBEOhC,OAAO,2BAAKI,GAAZ,IAAmBE,SAAUD,EAAON,UACtC,IFPkC,uBEQhC,OAAO,2BAAKK,GAAZ,IAAmBG,MAAOF,EAAON,UACnC,QACE,OAAOK,I,QCXLH,EAAgB,CACpBO,SAAU,IAYGC,MATf,WAAgD,IAAhCL,EAA+B,uDAAvBH,EAAeI,EAAQ,uCAC7C,OAAQA,EAAOL,MACf,IHJ0B,eGKxB,OAAO,2BAAKI,GAAZ,IAAmBI,SAAS,GAAD,mBAAMJ,EAAMI,UAAZ,CAAsBH,EAAON,YAC1D,QACE,OAAOK,ICJIM,EAFKC,0BAAgB,CAAER,OAAMG,WAAUG,WCOvCG,EAPDC,sBACZH,EACAI,8BACEC,0BAAgBC,O,mDCJdC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,0DAMJ,IACLZ,EAAaa,KAAKH,MAAlBV,SAER,OAAwB,IAApBA,EAASc,OACOd,EACfe,QAAO,SAACC,EAAOC,GAAR,OACND,EAAQC,EAAQC,MAAQD,EAAQE,cAAcF,EAAQnB,UAAUsB,MAAM,GACzDC,QAAQ,GAClB,I,+BAGD,IACA3B,EAAUmB,KAAKH,MAAfhB,MACR,OACE,gCACE,yBAAK4B,cAAY,eACd5B,GAEH,yBAAK4B,cAAY,eAAjB,gBAEIT,KAAKF,eAET,yBAAKW,cAAY,yBAAjB,Y,GA7BaC,IAAMC,WA+CZC,eAVS,SAAC7B,GAAD,MAAY,CAClCF,MAAOE,EAAMD,KAAKD,MAClBM,SAAUJ,EAAMK,OAAOD,YAQVyB,CAAyBhB,G,QChDnBiB,E,uKACT,IAAD,EACyBb,KAAKH,MAA7BiB,EADD,EACCA,MAAOC,EADR,EACQA,aACf,OACE,2BAAOC,QAAQ,SAAf,QAEE,2BACErC,KAAK,SACLsC,GAAG,QACHC,KAAK,QACLb,MAAQS,EACRK,SAAWJ,S,GAXmBJ,aCAnBS,E,uKACT,IAAD,EAC+BpB,KAAKH,MAAnCwB,EADD,EACCA,YAAaN,EADd,EACcA,aACrB,OACE,2BAAOC,QAAQ,eAAf,kBAEE,2BACErC,KAAK,OACLsC,GAAG,cACHC,KAAK,YACLb,MAAQgB,EACRF,SAAWJ,S,GAXyBJ,aCAzBW,E,uKACT,IAAD,EACwCtB,KAAKH,MAA5C0B,EADD,EACCA,WAAYtC,EADb,EACaA,SAAU8B,EADvB,EACuBA,aAC9B,OACE,2BAAOC,QAAQ,YAAf,QAEE,4BAAQC,GAAG,WAAWZ,MAAQpB,EAAWkC,SAAWJ,GACjDQ,EACGA,EAAWC,KAAI,SAACC,EAAMC,GAAP,OACf,4BAAQrB,MAAQoB,EAAOE,IAAMD,GAASD,MACtC,8C,GAV6Bd,aCAtBiB,E,uKACT,IAAD,EACiC5B,KAAKH,MAArCgC,EADD,EACCA,cAAed,EADhB,EACgBA,aACvB,OACE,2BACEC,QAAQ,gBACRX,MAAQwB,EACRV,SAAWJ,GAHb,yBAME,4BAAQE,GAAG,iBACT,4BAAQZ,MAAM,YAAd,YACA,4BAAQA,MAAM,2BAAd,2BACA,4BAAQA,MAAM,0BAAd,gC,GAbgCM,aCArBmB,E,uKACT,IAAD,EACuB9B,KAAKH,MAA3BkC,EADD,EACCA,IAAKhB,EADN,EACMA,aACb,OACE,2BAAOC,QAAQ,OAAf,MAEE,4BAAQC,GAAG,MAAMZ,MAAQ0B,EAAMZ,SAAWJ,GACxC,4BAAQV,MAAM,qBAAd,qBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,YAAd,kB,GAX4BM,aCQhCqB,E,kDACJ,aAAe,IAAD,8BACZ,gBAEKjD,MAAQ,CACXkC,GAAI,EACJM,WAAY,GACZT,MAAO,EACPO,YAAa,GACbpC,SAAU,MACV4C,cAAe,WACfE,IAAK,qBAGP,EAAKE,cAAgB,EAAKA,cAAclC,KAAnB,gBACrB,EAAKgB,aAAe,EAAKA,aAAahB,KAAlB,gBACpB,EAAKmC,YAAc,EAAKA,YAAYnC,KAAjB,gBAfP,E,gEAmBZC,KAAKiC,kB,mLAKoBE,MAAM,+C,cAAvBC,E,gBACgBA,EAASC,O,cAAzBC,E,OACAC,EAASC,OAAOC,KAAKH,GAASC,QAAO,SAAChB,GAAD,MAA+B,SAAfA,KAC3DvB,KAAK0C,SAAS,CACZnB,WAAYgB,I,kBAEPD,G,kCAEPtC,KAAK0C,SAAS,CACZnB,WAAW,EAAD,K,sJAKU,IAAXoB,EAAU,EAAVA,OACL1B,EAAO0B,EAAP1B,GACFZ,EAAwB,aAAhBsC,EAAOhE,KAAsBgE,EAAOC,QAAUD,EAAOtC,MACnEL,KAAK0C,SAAL,eAAiBzB,EAAKZ,M,6KAI2CL,KAAKjB,MAA9D+B,E,EAAAA,MAAOO,E,EAAAA,YAAapC,E,EAAAA,SAAU4C,E,EAAAA,cAAeE,E,EAAAA,IAAKd,E,EAAAA,GAClD4B,EAAqB7C,KAAKH,MAA1BgD,iB,KAEN5B,E,KACOH,E,KACPO,E,KACApC,E,KACQ4C,E,KACRE,E,UACqB/B,KAAKiC,gB,oBAPtB9C,E,CACJ8B,G,KACAZ,M,KACAgB,Y,KACApC,S,KACA6D,O,KACAf,I,KACAzB,c,MAEFuC,EAAiB1D,GACjBa,KAAK0C,UAAS,SAACK,GAAD,MAAc,CAC1B9B,GAAI8B,EAAQ9B,GAAK,M,sIAIX,IAAD,EACkEjB,KAAKjB,MAAtEwC,EADD,EACCA,WAAYT,EADb,EACaA,MAAOO,EADpB,EACoBA,YAAapC,EADjC,EACiCA,SAAU4C,EAD3C,EAC2CA,cAAeE,EAD1D,EAC0DA,IACjE,OACE,iCACE,8BACE,kBAAC,EAAD,CAAY1B,MAAQS,EAAQC,aAAef,KAAKe,eAChD,kBAAC,EAAD,CAAkBV,MAAQgB,EAAcN,aAAef,KAAKe,eAC5D,kBAAC,EAAD,CACEV,MAAQpB,EACRsC,WAAaA,EACbR,aAAef,KAAKe,eAEtB,kBAAC,EAAD,CAAcV,MAAQwB,EAAgBd,aAAef,KAAKe,eAC1D,kBAAC,EAAD,CAAUV,MAAQ0B,EAAMhB,aAAef,KAAKe,eAC5C,4BAAQpC,KAAK,SAASqE,QAAUhD,KAAKkC,aAArC,sBAIF,kBAAC,IAAD,CAAMe,GAAG,KACP,4BAAQtE,KAAK,UAAb,gB,GAlFgB+B,IAAMC,WAqGjBC,eAZS,SAAC7B,GAAD,MAAY,CAClCE,SAAUF,EAAME,SAASA,aAGA,SAACiE,GAAD,MAAe,CACxCL,iBAAkB,SAACnE,GAAD,OAAawE,EZ/FN,SAACxE,GAAD,MAAc,CAAEC,KANf,eAMmCD,WY+FrByE,CAAYzE,QAOvCkC,CAA6CoB,GCjG7CoB,E,uKATX,OACE,iCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALa1C,IAAMC,W,gBCIrB0C,E,kDACJ,aAAe,IAAD,8BACZ,gBAEKtE,MAAQ,CACXF,MAAO,GACPyE,SAAU,GACVC,YAAY,GAGd,EAAKxC,aAAe,EAAKA,aAAahB,KAAlB,gBACpB,EAAKmC,YAAc,EAAKA,YAAYnC,KAAjB,gBAVP,E,4DAa6B,IAAD,IAA3B4C,OAAUzB,EAAiB,EAAjBA,KAAMb,EAAW,EAAXA,MAC7BL,KAAK0C,SAAL,eAEKxB,EAAOb,GAEVL,KAAKwD,mB,oCAIM,IACL3E,EAAUmB,KAAKjB,MAAfF,MADI,EAE2BmB,KAAKH,MAApC4D,EAFI,EAEJA,cAAeC,EAFX,EAEWA,YACvBD,EAAc5E,GACd6E,M,wCAGiB,IAAD,EACY1D,KAAKjB,MAAzBF,EADQ,EACRA,MAAOyE,EADC,EACDA,SAES,gBACQK,KAAK9E,IAGtByE,EAASrD,QAFD,EAGrBD,KAAK0C,SAAS,CACZa,YAAY,IAGdvD,KAAK0C,SAAS,CACZa,YAAY,M,+BAKR,IAAD,EACiCvD,KAAKjB,MAArCF,EADD,EACCA,MAAOyE,EADR,EACQA,SAAUC,EADlB,EACkBA,WACzB,OACE,yBAAKK,UAAU,aACb,6BAASA,UAAU,SACjB,2CACA,kBAAC,IAAD,CAAUA,UAAU,SACpB,2BACEA,UAAU,QACVjF,KAAK,OACLuC,KAAK,QACLb,MAAOxB,EACPsC,SAAUnB,KAAKe,aACfN,cAAY,cACZoD,YAAY,WAEd,2BACED,UAAU,QACVjF,KAAK,OACLuC,KAAK,WACLb,MAAOiD,EACPnC,SAAUnB,KAAKe,aACfN,cAAY,iBACZoD,YAAY,UAEd,kBAAC,IAAD,CAAMZ,GAAG,aACP,4BACEtE,KAAK,SACLmF,SAAUP,EACVP,QAAShD,KAAKkC,YACd6B,QAAQ,WAJV,iB,GA1EQrD,IAAMC,WAkGXC,cAAQ,MATI,SAACsC,GAAD,MAAe,CACxCO,cAAe,SAAC/E,GAAD,OAAawE,Ed5FP,SAACxE,GAAD,MAAc,CAAEC,KANf,WAM+BD,Wc4FhBsF,CAAQtF,KAC7CgF,YAAa,kBAAMR,EdvFY,uCAAM,WAAOA,GAAP,mBAAAe,EAAA,6DACrCf,EANiC,CAAEvE,KANR,kBAWU,kBAGZwD,MAAM,+CAHM,cAG7BC,EAH6B,gBAIbA,EAASC,OAJI,OAI7BC,EAJ6B,OAK7BC,EAASC,OAAOC,KAAKH,GAASC,QAAO,SAAChB,GAAD,MAA+B,SAAfA,KAC3D2B,EAV4C,CAAEvE,KANd,uBAM0CD,QAU9C6D,IANO,kDAQnCW,EAASzE,EAAmB,EAAD,KARQ,0DAAN,2Dc8FlBmC,CAAkCyC,GC5FlCa,MATf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,YAAYC,UAAYhB,IACpC,kBAAC,IAAD,CAAOe,KAAK,IAAIC,UAAYf,MCDlCgB,IAASC,OACP,kBAAC,IAAD,CAAU/E,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJgF,SAASC,eAAe,W","file":"static/js/main.30df1ed4.chunk.js","sourcesContent":["export const ADD_USER = 'ADD_USER';\nexport const SAVE_CURRENCY = 'SAVE_CURRENCY';\nexport const SAVE_CURRENCY_SUCESS = 'SAVE_CURRENCY_SUCESS';\nexport const SAVE_CURRENCY_FAILED = 'SAVE_CURRENCY_FAILED';\nexport const ADD_EXPENSES = 'ADD_EXPENSES';\n\nexport const addUser = (payload) => ({ type: ADD_USER, payload });\nexport const saveCurrency = () => ({ type: SAVE_CURRENCY });\nexport const saveCurrencySucess = (payload) => ({ type: SAVE_CURRENCY_SUCESS, payload });\nexport const saveCurrencyFailed = (payload) => ({ type: SAVE_CURRENCY_FAILED, payload });\nexport const addExpenses = (payload) => ({ type: ADD_EXPENSES, payload });\n\nexport const saveCurrencyThunk = () => async (dispatch) => {\n  dispatch(saveCurrency());\n  try {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const results = await response.json();\n    const filter = Object.keys(results).filter((currencies) => currencies !== 'USDT');\n    dispatch(saveCurrencySucess(filter));\n  } catch (error) {\n    dispatch(saveCurrencyFailed(error));\n  }\n};\n","import { ADD_USER } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nfunction user(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ADD_USER:\n    return { email: action.payload };\n  default:\n    return state;\n  }\n}\n\nexport default user;\n","import { SAVE_CURRENCY_SUCESS, SAVE_CURRENCY_FAILED } from '../actions';\n\nconst INITIAL_STATE = {\n  currency: [],\n};\n\nfunction currency(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case SAVE_CURRENCY_SUCESS:\n    return { ...state, currency: action.payload };\n  case SAVE_CURRENCY_FAILED:\n    return { ...state, error: action.payload };\n  default:\n    return state;\n  }\n}\n\nexport default currency;\n","import { ADD_EXPENSES } from '../actions';\n\nconst INITIAL_STATE = {\n  expenses: [],\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ADD_EXPENSES:\n    return { ...state, expenses: [...state.expenses, action.payload] };\n  default:\n    return state;\n  }\n}\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport currency from './currency';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, currency, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sumExpenses = this.sumExpenses.bind(this);\n  }\n\n  sumExpenses() {\n    const { expenses } = this.props;\n\n    if (expenses.length !== 0) {\n      const totalCost = expenses\n        .reduce((total, expense) => (\n          total + expense.value * expense.exchangeRates[expense.currency].ask), 0);\n      return totalCost.toFixed(2);\n    } return 0;\n  }\n\n  render() {\n    const { email } = this.props;\n    return (\n      <header>\n        <div data-testid=\"email-field\">\n          {email}\n        </div>\n        <div data-testid=\"total-field\">\n          Despesa Total\n          { this.sumExpenses() }\n        </div>\n        <div data-testid=\"header-currency-field\">\n          BRL\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  expenses: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InputValue extends Component {\n  render() {\n    const { valor, handleChange } = this.props;\n    return (\n      <label htmlFor=\"valor\">\n        Valor\n        <input\n          type=\"number\"\n          id=\"valor\"\n          name=\"valor\"\n          value={ valor }\n          onChange={ handleChange }\n        />\n      </label>\n    );\n  }\n}\n\nInputValue.propTypes = {\n  valor: PropTypes.string,\n  handleChange: PropTypes.func,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InputDescription extends Component {\n  render() {\n    const { description, handleChange } = this.props;\n    return (\n      <label htmlFor=\"description\">\n        Descrição\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"descricao\"\n          value={ description }\n          onChange={ handleChange }\n        />\n      </label>\n    );\n  }\n}\n\nInputDescription.propTypes = {\n  description: PropTypes.string,\n  handleChange: PropTypes.func,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InputCurrency extends Component {\n  render() {\n    const { currencies, currency, handleChange } = this.props;\n    return (\n      <label htmlFor=\"currency\">\n        Moeda\n        <select id=\"currency\" value={ currency } onChange={ handleChange }>\n          {currencies\n            ? currencies.map((item, index) => (\n              <option value={ item } key={ index }>{item}</option>))\n            : <option>erro</option>}\n        </select>\n      </label>\n    );\n  }\n}\n\nInputCurrency.propTypes = {\n  currency: PropTypes.string,\n  currencies: PropTypes.array,\n  handleChange: PropTypes.func,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InputPayment extends Component {\n  render() {\n    const { paymentMethod, handleChange } = this.props;\n    return (\n      <label\n        htmlFor=\"paymentMethod\"\n        value={ paymentMethod }\n        onChange={ handleChange }\n      >\n        Método de pagamento\n        <select id=\"paymentMethod\">\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nInputPayment.propTypes = {\n  paymentMethod: PropTypes.string,\n  handleChange: PropTypes.func,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InputTag extends Component {\n  render() {\n    const { tag, handleChange } = this.props;\n    return (\n      <label htmlFor=\"tag\">\n        Tag\n        <select id=\"tag\" value={ tag } onChange={ handleChange }>\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nInputTag.propTypes = {\n  tag: PropTypes.string,\n  handleChange: PropTypes.func,\n}.isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport InputValue from './InputValue';\nimport InputDescription from './InputDescription';\nimport InputCurrency from './InputCurrency';\nimport InputPayment from './InputPayment';\nimport InputTag from './InputTag';\nimport { addExpenses } from '../actions';\n\nclass ExpenseForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: 0,\n      currencies: '',\n      valor: 0,\n      description: '',\n      currency: 'USD',\n      paymentMethod: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n\n    this.getCurrencies = this.getCurrencies.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCurrencies();\n  }\n\n  async getCurrencies() {\n    try {\n      const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n      const results = await response.json();\n      const filter = Object.keys(results).filter((currencies) => currencies !== 'USDT');\n      this.setState({\n        currencies: filter,\n      });\n      return results;\n    } catch (error) {\n      this.setState({\n        currencies: error,\n      });\n    }\n  }\n\n  handleChange({ target }) {\n    const { id } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({ [id]: value });\n  }\n\n  async handleClick() {\n    const { valor, description, currency, paymentMethod, tag, id } = this.state;\n    const { addExpenseAction } = this.props;\n    const expenses = {\n      id,\n      value: valor,\n      description,\n      currency,\n      method: paymentMethod,\n      tag,\n      exchangeRates: await this.getCurrencies(),\n    };\n    addExpenseAction(expenses);\n    this.setState((previus) => ({\n      id: previus.id + 1,\n    }));\n  }\n\n  render() {\n    const { currencies, valor, description, currency, paymentMethod, tag } = this.state;\n    return (\n      <section>\n        <form>\n          <InputValue value={ valor } handleChange={ this.handleChange } />\n          <InputDescription value={ description } handleChange={ this.handleChange } />\n          <InputCurrency\n            value={ currency }\n            currencies={ currencies }\n            handleChange={ this.handleChange }\n          />\n          <InputPayment value={ paymentMethod } handleChange={ this.handleChange } />\n          <InputTag value={ tag } handleChange={ this.handleChange } />\n          <button type=\"button\" onClick={ this.handleClick }>\n            Adicionar despesa\n          </button>\n        </form>\n        <Link to=\"/\">\n          <button type=\"button\">Voltar</button>\n        </Link>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currency: state.currency.currency,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpenseAction: (payload) => dispatch(addExpenses(payload)),\n});\n\nExpenseForm.propTypes = {\n  currency: PropTypes.arrayOf,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n","import React from 'react';\nimport Header from '../components/Header';\nimport ExpenseForm from '../components/ExpenseForm';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <section>\n        <Header />\n        <ExpenseForm />\n      </section>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addUser, saveCurrencyThunk } from \"../actions\";\nimport \"./Login.css\";\nimport { GiWallet } from \"react-icons/gi\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isDisabled: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState(\n      {\n        [name]: value,\n      },\n      this.loginValidation\n    );\n  }\n\n  handleClick() {\n    const { email } = this.state;\n    const { addUserAction, getCurrency } = this.props;\n    addUserAction(email);\n    getCurrency();\n  }\n\n  loginValidation() {\n    const { email, password } = this.state;\n    // referencia do regexValidation: Mikaela Braga\n    const regexValidation = /(.*)@(.*).com/;\n    const isValid = regexValidation.test(email);\n    const requiredLength = 6;\n\n    if (isValid && password.length >= requiredLength) {\n      this.setState({\n        isDisabled: false,\n      });\n    } else {\n      this.setState({\n        isDisabled: true,\n      });\n    }\n  }\n\n  render() {\n    const { email, password, isDisabled } = this.state;\n    return (\n      <div className=\"Login-all\">\n        <section className=\"Login\">\n          <h3>Fazer Login</h3>\n          <GiWallet className=\"Icon\" />\n          <input\n            className=\"Email\"\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            data-testid=\"email-input\"\n            placeholder=\"e-mail\"\n          />\n          <input\n            className=\"Senha\"\n            type=\"text\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            data-testid=\"password-input\"\n            placeholder=\"senha\"\n          />\n          <Link to=\"/carteira\">\n            <button\n              type=\"button\"\n              disabled={isDisabled}\n              onClick={this.handleClick}\n              variant=\"primary\"\n            >\n              Entrar\n            </button>\n          </Link>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addUserAction: (payload) => dispatch(addUser(payload)),\n  getCurrency: () => dispatch(saveCurrencyThunk()),\n});\n\nLogin.propTypes = {\n  addUserAction: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport Wallet from './pages/Wallet';\nimport Login from './pages/Login';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/carteira\" component={ Wallet } />\n      <Route path=\"/\" component={ Login } />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}